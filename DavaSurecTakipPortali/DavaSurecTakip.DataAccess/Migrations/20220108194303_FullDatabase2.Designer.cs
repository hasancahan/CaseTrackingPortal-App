// <auto-generated />
using System;
using DavaSurecTakip.DataAccess.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DavaSurecTakip.DataAccess.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220108194303_FullDatabase2")]
    partial class FullDatabase2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.Authority", b =>
                {
                    b.Property<int>("AuthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorityDefination")
                        .HasColumnType("Varchar(40)");

                    b.Property<bool>("Change")
                        .HasColumnType("bit");

                    b.Property<bool>("Create")
                        .HasColumnType("bit");

                    b.Property<bool>("Delete")
                        .HasColumnType("bit");

                    b.Property<string>("FieldName")
                        .HasColumnType("Varchar(40)");

                    b.Property<bool>("View")
                        .HasColumnType("bit");

                    b.HasKey("AuthId");

                    b.ToTable("authorities");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.Case", b =>
                {
                    b.Property<int>("CaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActualBasis")
                        .HasColumnType("Varchar(20)");

                    b.Property<string>("AdNameChange")
                        .HasColumnType("Varchar(40)");

                    b.Property<string>("AdNameCreate")
                        .HasColumnType("Varchar(40)");

                    b.Property<bool>("Archive")
                        .HasColumnType("bit");

                    b.Property<int>("CaseActualValue")
                        .HasColumnType("int");

                    b.Property<DateTime>("CaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CaseFileStageDto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CaseOpeningValue")
                        .HasColumnType("int");

                    b.Property<string>("CaseResultDto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CaseResultId")
                        .HasColumnType("int");

                    b.Property<string>("CaseSubjectDto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CaseSubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Claimant")
                        .HasColumnType("Varchar(200)");

                    b.Property<int>("ClaimantAttornerId")
                        .HasColumnType("int");

                    b.Property<int>("CorporationId")
                        .HasColumnType("int");

                    b.Property<int>("CourtInfoId")
                        .HasColumnType("int");

                    b.Property<string>("Defendant")
                        .HasColumnType("Varchar(200)");

                    b.Property<int>("DefendantAttornerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ErDatChange")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ErDatCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EventYear")
                        .HasColumnType("datetime2");

                    b.Property<int>("FileStageId")
                        .HasColumnType("int");

                    b.Property<int>("IHopeId")
                        .HasColumnType("int");

                    b.Property<int>("InFavorOfAgencyFee")
                        .HasColumnType("int");

                    b.Property<bool>("InterimInjunction")
                        .HasColumnType("bit");

                    b.Property<int?>("LookupAttornerAttornerId")
                        .HasColumnType("int");

                    b.Property<int?>("LookupAttornerLAttornerId")
                        .HasColumnType("int");

                    b.Property<int?>("LookupCaseResultLCaseResultId")
                        .HasColumnType("int");

                    b.Property<int?>("LookupCaseSubjectLCaseSubjectId")
                        .HasColumnType("int");

                    b.Property<int?>("LookupCourtInfoLCourtinInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("LookupFileStageLFileStageId")
                        .HasColumnType("int");

                    b.Property<int?>("LookupProvinceLProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("Notified")
                        .HasColumnType("Varchar(200)");

                    b.Property<bool>("ObjectiveOfInterimInjunction")
                        .HasColumnType("bit");

                    b.Property<string>("OldBasis")
                        .HasColumnType("Varchar(20)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("SecondDefendant")
                        .HasColumnType("Varchar(200)");

                    b.Property<string>("Tc")
                        .HasColumnType("Varchar(11)");

                    b.Property<DateTime>("TrialDay")
                        .HasColumnType("datetime2");

                    b.HasKey("CaseId");

                    b.HasIndex("LookupAttornerAttornerId");

                    b.HasIndex("LookupAttornerLAttornerId");

                    b.HasIndex("LookupCaseResultLCaseResultId");

                    b.HasIndex("LookupCaseSubjectLCaseSubjectId");

                    b.HasIndex("LookupCourtInfoLCourtinInfoId");

                    b.HasIndex("LookupFileStageLFileStageId");

                    b.HasIndex("LookupProvinceLProvinceId");

                    b.ToTable("cases");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupAttornerL", b =>
                {
                    b.Property<int>("AttornerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attorner")
                        .HasColumnType("Varchar(200)");

                    b.HasKey("AttornerId");

                    b.ToTable("lookupAttornerL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupCaseResultL", b =>
                {
                    b.Property<int>("CaseResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseResult")
                        .HasColumnType("Varchar(100)");

                    b.HasKey("CaseResultId");

                    b.ToTable("lookupCaseResultL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupCaseSubjectL", b =>
                {
                    b.Property<int>("CaseSubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseSubject")
                        .HasColumnType("Varchar(100)");

                    b.HasKey("CaseSubjectId");

                    b.ToTable("lookupCaseSubjectL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupCourtInfoL", b =>
                {
                    b.Property<int>("CourtinInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourtinInfo")
                        .HasColumnType("Varchar(200)");

                    b.Property<int?>("LookupProvinceLProvinceId")
                        .HasColumnType("int");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("CourtinInfoId");

                    b.HasIndex("LookupProvinceLProvinceId");

                    b.ToTable("lookupCourtInfoL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupDamageTypeL", b =>
                {
                    b.Property<int>("DamageTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DamageType")
                        .HasColumnType("Varchar(100)");

                    b.HasKey("DamageTypeId");

                    b.ToTable("lookupDamageTypeL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupFileDamageStatusL", b =>
                {
                    b.Property<int>("DamageStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileDamagesStatus")
                        .HasColumnType("Varchar(40)");

                    b.HasKey("DamageStatusId");

                    b.ToTable("lookupFileDamageStatusL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupFileStageL", b =>
                {
                    b.Property<int>("FileStageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileStage")
                        .HasColumnType("Varchar(40)");

                    b.HasKey("FileStageId");

                    b.ToTable("lookupFileStageL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupInsuranceExplanationL", b =>
                {
                    b.Property<int>("InsuranceExplanationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InsuranceExplanation")
                        .HasColumnType("Varchar(100)");

                    b.HasKey("InsuranceExplanationId");

                    b.ToTable("lookupInsuranceExplanationL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupLevyInfoL", b =>
                {
                    b.Property<int>("LevyInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LevyInfo")
                        .HasColumnType("Varchar(160)");

                    b.Property<int?>("LookupProvinceLProvinceId")
                        .HasColumnType("int");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("LevyInfoId");

                    b.HasIndex("LookupProvinceLProvinceId");

                    b.ToTable("lookupLevyInfoL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupPaymentTypeL", b =>
                {
                    b.Property<int>("PaymentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentType")
                        .HasColumnType("Varchar(20)");

                    b.HasKey("PaymentTypeId");

                    b.ToTable("lookupPaymentTypeL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupProvinceL", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Province")
                        .HasColumnType("Varchar(20)");

                    b.HasKey("ProvinceId");

                    b.ToTable("lookupProvinceL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupWorkAreaL", b =>
                {
                    b.Property<int>("WorkAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WorkArea")
                        .HasColumnType("Varchar(20)");

                    b.HasKey("WorkAreaId");

                    b.ToTable("lookupWorkAreaL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.PaidDamages", b =>
                {
                    b.Property<int>("RowNumb")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdNameChange")
                        .HasColumnType("Varchar(40)");

                    b.Property<string>("AdNameCreate")
                        .HasColumnType("Varchar(40)");

                    b.Property<float>("CalculatedRecouseAmount")
                        .HasColumnType("real");

                    b.Property<bool>("CaseFinalSituation")
                        .HasColumnType("bit");

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<float>("CashCollateral")
                        .HasColumnType("real");

                    b.Property<float>("CollectionAmount")
                        .HasColumnType("real");

                    b.Property<string>("CollectionChannel")
                        .HasColumnType("Varchar(20)");

                    b.Property<int>("DamageTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ErDatChange")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ErDatCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FileDamageStatusId")
                        .HasColumnType("int");

                    b.Property<string>("FirmInfo")
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("InfoNote")
                        .HasColumnType("Varchar(4000)");

                    b.Property<bool>("Insurable")
                        .HasColumnType("bit");

                    b.Property<int>("InsuranceExpid")
                        .HasColumnType("int");

                    b.Property<int>("LevyId")
                        .HasColumnType("int");

                    b.Property<int?>("LookupDamageTypeLDamageTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("LookupFileDamageStatusLDamageStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("LookupInsuranceExplanationLInsuranceExplanationId")
                        .HasColumnType("int");

                    b.Property<int?>("LookupLevyInfoLLevyInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("LookupPaymentTypeLPaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("LookupWorkAreaLWorkAreaId")
                        .HasColumnType("int");

                    b.Property<string>("PartInfo")
                        .HasColumnType("Varchar(20)");

                    b.Property<string>("PayeeInfo")
                        .HasColumnType("Varchar(160)");

                    b.Property<float>("PaymentAmount")
                        .HasColumnType("real");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Piece")
                        .HasColumnType("int");

                    b.Property<bool>("RecouseDeclaration")
                        .HasColumnType("bit");

                    b.Property<string>("RecouseExplanation")
                        .HasColumnType("Varchar(100)");

                    b.Property<float>("RemainingAmount")
                        .HasColumnType("real");

                    b.Property<float>("SapAmount")
                        .HasColumnType("real");

                    b.Property<DateTime>("SapPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SapPaymentYear")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkAreaId")
                        .HasColumnType("int");

                    b.HasKey("RowNumb");

                    b.HasIndex("CaseId");

                    b.HasIndex("LookupDamageTypeLDamageTypeId");

                    b.HasIndex("LookupFileDamageStatusLDamageStatusId");

                    b.HasIndex("LookupInsuranceExplanationLInsuranceExplanationId");

                    b.HasIndex("LookupLevyInfoLLevyInfoId");

                    b.HasIndex("LookupPaymentTypeLPaymentTypeId");

                    b.HasIndex("LookupWorkAreaLWorkAreaId");

                    b.ToTable("paidDamages");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.UserAuthorization", b =>
                {
                    b.Property<string>("AdName")
                        .HasColumnType("Varchar(40)");

                    b.Property<int>("AuthId")
                        .HasColumnType("int");

                    b.Property<int>("RowNumb")
                        .HasColumnType("int");

                    b.HasKey("AdName");

                    b.ToTable("userAuthorizations");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("Varchar(15)");

                    b.Property<string>("UserPassword")
                        .HasMaxLength(10)
                        .HasColumnType("Varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.Case", b =>
                {
                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.LookupAttornerL", "LookupAttorner")
                        .WithMany()
                        .HasForeignKey("LookupAttornerAttornerId");

                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.LookupAttornerL", "LookupAttornerL")
                        .WithMany()
                        .HasForeignKey("LookupAttornerLAttornerId");

                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.LookupCaseResultL", "LookupCaseResultL")
                        .WithMany("Cases")
                        .HasForeignKey("LookupCaseResultLCaseResultId");

                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.LookupCaseSubjectL", "LookupCaseSubjectL")
                        .WithMany("Cases")
                        .HasForeignKey("LookupCaseSubjectLCaseSubjectId");

                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.LookupCourtInfoL", "LookupCourtInfoL")
                        .WithMany("Cases")
                        .HasForeignKey("LookupCourtInfoLCourtinInfoId");

                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.LookupFileStageL", "LookupFileStageL")
                        .WithMany("Cases")
                        .HasForeignKey("LookupFileStageLFileStageId");

                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.LookupProvinceL", "LookupProvinceL")
                        .WithMany("Cases")
                        .HasForeignKey("LookupProvinceLProvinceId");

                    b.Navigation("LookupAttorner");

                    b.Navigation("LookupAttornerL");

                    b.Navigation("LookupCaseResultL");

                    b.Navigation("LookupCaseSubjectL");

                    b.Navigation("LookupCourtInfoL");

                    b.Navigation("LookupFileStageL");

                    b.Navigation("LookupProvinceL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupCourtInfoL", b =>
                {
                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.LookupProvinceL", "LookupProvinceL")
                        .WithMany("LookupCourtInfoL")
                        .HasForeignKey("LookupProvinceLProvinceId");

                    b.Navigation("LookupProvinceL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupLevyInfoL", b =>
                {
                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.LookupProvinceL", "LookupProvinceL")
                        .WithMany("LookupLevyInfoL")
                        .HasForeignKey("LookupProvinceLProvinceId");

                    b.Navigation("LookupProvinceL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.PaidDamages", b =>
                {
                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.Case", "Case")
                        .WithMany("PaidDamages")
                        .HasForeignKey("CaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.LookupDamageTypeL", "LookupDamageTypeL")
                        .WithMany("PaidDamages")
                        .HasForeignKey("LookupDamageTypeLDamageTypeId");

                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.LookupFileDamageStatusL", "LookupFileDamageStatusL")
                        .WithMany("PaidDamages")
                        .HasForeignKey("LookupFileDamageStatusLDamageStatusId");

                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.LookupInsuranceExplanationL", "LookupInsuranceExplanationL")
                        .WithMany("PaidDamages")
                        .HasForeignKey("LookupInsuranceExplanationLInsuranceExplanationId");

                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.LookupLevyInfoL", "LookupLevyInfoL")
                        .WithMany("PaidDamages")
                        .HasForeignKey("LookupLevyInfoLLevyInfoId");

                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.LookupPaymentTypeL", "LookupPaymentTypeL")
                        .WithMany("PaidDamages")
                        .HasForeignKey("LookupPaymentTypeLPaymentTypeId");

                    b.HasOne("DavaSurecTakip.Entities.DbEntitiesModels.LookupWorkAreaL", "LookupWorkAreaL")
                        .WithMany("PaidDamages")
                        .HasForeignKey("LookupWorkAreaLWorkAreaId");

                    b.Navigation("Case");

                    b.Navigation("LookupDamageTypeL");

                    b.Navigation("LookupFileDamageStatusL");

                    b.Navigation("LookupInsuranceExplanationL");

                    b.Navigation("LookupLevyInfoL");

                    b.Navigation("LookupPaymentTypeL");

                    b.Navigation("LookupWorkAreaL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.Case", b =>
                {
                    b.Navigation("PaidDamages");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupCaseResultL", b =>
                {
                    b.Navigation("Cases");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupCaseSubjectL", b =>
                {
                    b.Navigation("Cases");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupCourtInfoL", b =>
                {
                    b.Navigation("Cases");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupDamageTypeL", b =>
                {
                    b.Navigation("PaidDamages");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupFileDamageStatusL", b =>
                {
                    b.Navigation("PaidDamages");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupFileStageL", b =>
                {
                    b.Navigation("Cases");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupInsuranceExplanationL", b =>
                {
                    b.Navigation("PaidDamages");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupLevyInfoL", b =>
                {
                    b.Navigation("PaidDamages");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupPaymentTypeL", b =>
                {
                    b.Navigation("PaidDamages");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupProvinceL", b =>
                {
                    b.Navigation("Cases");

                    b.Navigation("LookupCourtInfoL");

                    b.Navigation("LookupLevyInfoL");
                });

            modelBuilder.Entity("DavaSurecTakip.Entities.DbEntitiesModels.LookupWorkAreaL", b =>
                {
                    b.Navigation("PaidDamages");
                });
#pragma warning restore 612, 618
        }
    }
}
